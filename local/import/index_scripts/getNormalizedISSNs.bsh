import org.marc4j.marc.Record;

// Give ourselves the ability to import other BeanShell scripts
String vufindHome = System.getenv("VUFIND_HOME");
String vufindLocal = System.getenv("VUFIND_LOCAL_DIR");
addClassPath(vufindHome + "/import");
if (vufindLocal != null) {
    addClassPath(vufindLocal + "/import");
}
importCommands("index_scripts");

// define the base level indexer so that its methods can be called from the script.
// note that the SolrIndexer code will set this value before the script methods are called.
org.solrmarc.index.SolrIndexer indexer = null;

/**
 * Extract ISSN from a record and return them in a normalized format
 * @param record
 * @param fieldSpec
 * @return Set of normalized ISSNs
 */
public Set getNormalizedISSNs(org.solrmarc.index.SolrIndexer indexer, Record record, String fieldSpec) {
    // Initialize return value:
    Set result = new LinkedHashSet();

    // Loop through relevant fields and normalize everything:
    Set issns = indexer.getFieldList(record, fieldSpec);
    Iterator issnIter = issns.iterator();
    if (issns != null) {
        String current;
        while(issnIter.hasNext()) {
            current = getNormalized(issnIter.next());
            if (current != null && current != false && current.length() > 0) {
                result.add(current);
            }
        }
    }

    // Send back results:
    return result;
}

public Set getNormalizedISSNs(Record record, String fieldSpec) {
    return getNormalizedISSNs(indexer, record, fieldSpec);
}

